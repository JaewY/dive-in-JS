# 2022.04.13

# 8장 제어문


## 블록문 

- 0개 이상의 문을 중괄호로 묶은 것 

- 코드 블럭 또는 블록이라 부른다.

- 블록문의 끝에는 세미콜론을 붙이지 않는다.


## 조건문

### if else 문

- if 문의 조건식은 불리언 값으로 평가된다.

- else if 와 else 는 옵션이다.

- 코드 블록 내의 문이 하나라면 중괄호 생략가능하다.

- 삼항 연산자로 바꿀 수 있다. 

- 삼항 연산자는 변수에 할당 가능하고 if..else는 불가능하다.

- if (조건식1){
  // 참이면 실행될 코드 블록
}  else if (조건식2) {
  // 참이면 실행될 코드 블록
} else {
  // 위에서 실행안될시 실행될 블록
}


## 반복문

### 1. switch 문 

- 반드시 break , default 해주기  (안할경우 풀쓰루(전체반복)이됨)

- 조건이 많을 경우 if..else보다 switch가 가독성이 좋다면 사용하기.

- switch문의 표현식은 불리언 값보다는 문자열이나 숫자인 경우가 많다.

- switch (표현식){
  
  case 표현식 1: 
  // 표현식 1과 일치할떄 실행할 문 
  braek ;
  case 표현식 2:
  // 표현식 2와 일치할때 실행할 문
  break ;
  default ;
  // 위의 case에서 일치하는게 없을떄 실행할 문

}

### 2. for 문

- for문 내에 for문 사용 가능하다 (중첩 for문)

- 반복 횟수가 명확할때 사용

- for (변수 선언문 ; 조건식 ; 증감식 ){
  // 조건식이 참일경우 실행될 문
}

### 3. while 문 

- 반복 횟수가 불명확할때 사용

- 무한 루프에 걸리지 않기 위해 if문으로 탈출 조건을 만들고 break를 써서 탈출한다.

- while (조건식) {
  // 조건식이 참일경우 실행될 문
  if (조건식) break;
}

## break 문

- 레이블 문 , 반복문 ,switch 문의 코드 블록을 탈출한다.

- 참고 : 레이블 문 
  - 식별자가 붙은 문 
  - ex) foo : {console.log(1)}
  - ex2) foo : for (let i=0 ; i<3 ; i++){
  console.log(i)
}

- 중첩 for문의 외부 for문 까지 탈출하려면 레이블 문을 사용한다.

## continue 문

- 반복문의 코드 블럭 실행을 현 시점에서 중단하고 반복문의 증감식으로 실행 흐름을 이동시킨다 

- break문 처럼 반복문을 탈출하지는 않는다. 

